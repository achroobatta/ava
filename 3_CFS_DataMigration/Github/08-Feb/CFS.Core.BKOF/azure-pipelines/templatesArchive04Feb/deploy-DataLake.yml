#deploy-DataLake.yml

parameters:

- name: serviceName
  type: string

- name: serviceConnection
  type: string

- name: deploymentType
  type: string

- name: serviceId
  type: string

steps:
  - task: AzureCLI@2
    displayName : Deploy Data Lake Gen2 Storage Account in ${{ parameters.serviceName }} Subscription
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' `
                    --name $(deploymentName) `
                    --template-file $(System.ArtifactsDirectory)\content\bicep-templates\deployment\deployment-templates\deploy-DataLakeGen2.bicep `                   
                    --parameters environmentPrefix='$(AzureEnvironmentPrefix)' `
                    --parameters owner='$(owner)' `
                    --parameters costCenter='$(costCenterCode)' `
                    --parameters australiaEastOffsetSymbol='$(AustraliaEastOffsetSymbol)' `
                    --parameters $(System.ArtifactsDirectory)\content\bicep-templates\deployment\05-DataLake\datalake-${{ parameters.serviceId }}.param.$(AzureEnvironmentPrefix).json `
                    --parameters appName='$(appName)' `
                    --parameters resourceLocation='$(resourceLocation)' `
                    --parameters dlstorageAccountName='$(destStorageAccountName)' `
                    --parameters dlRootContainterName='$(rootContainerName)' `
                    --parameters warrantyPeriod='$(warrantyPeriod)'

  - task: AzureCLI@2
    displayName : Add A Record in DNS Zone
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        $location = "$(resourceLocation)"
        $storageAcct = "$(destStorageAccountName)"
        $endpoint = "pve-$location-$storageAcct"
        $dnsZoneGrp = "default"
        $rgName = "$(rgName)"

        az account set --subscription "$(subId)"
        $privateIp = az network private-endpoint dns-zone-group show --endpoint-name $endpoint -n $dnsZoneGrp -g $rgName --query privateDnsZoneConfigs[].recordSets[].ipAddresses[] --output tsv
        $privateIp

        az account set --subscription "$(connSubId)"
        az network private-dns record-set a list -g "$(connRg)" -z privatelink.blob.core.windows.net
        az network private-dns record-set a add-record -g "$(connRg)" -a $privateIp -n $storageAcct -z privatelink.blob.core.windows.net