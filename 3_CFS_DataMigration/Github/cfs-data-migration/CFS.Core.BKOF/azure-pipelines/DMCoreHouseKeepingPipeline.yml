## Format
name: $(Date:yyyyMMdd)$(Rev:.rr)

# Stage Trigger
trigger: none

pr: none

parameters:
- name: taskNumber
  displayName: 'Work Item Id'
  type: string
  default: " "
- name: environment
  displayName: 'Environment'
  type: string
  values:
    - "Non-Production"
    - "Production"
    - " "
- name: vmName
  displayName: 'VM Name (To be deleted)'
  type: string
  default: " "
- name: vmRgName
  displayName: 'VM RG Name'
  type: string
  default: " "
- name: diagStorageAccount
  displayName: 'Storage Account Name (To be deleted)'
  type: string
  default: " "
- name: resourceLocation
  displayName: 'Resource Location'
  type: string
  default: " "
- name: receiverEmailAddress
  displayName: 'Receiver Email Address'
  type: string
  default: " "
- name: commRGName
  displayName: 'Comm RG Name'
  type: string
  default: " "
- name: targetDataType
  displayName: 'Target Data Type'
  type: string
  values:
    - "internal"
    - "external"
    - " "
- name: destStorageAccount
  displayName: 'Dest Storage Account'
  type: string
  default: " "
- name: destContainerName
  displayName: 'Dest Container Name'
  type: string
  default: " "
- name: destFileName
  displayName: 'Dest File Name'
  type: string
  default: " "
- name: zipFileSecretName
  displayName: 'Zip File Secret Name'
  type: string
  default: " "
- name: keyVaultNameforSecret
  displayName: 'Key Vault Name for Secret'
  type: string
  default: " "
- name: clientEmailAddress
  displayName: 'Email Address that will receive the password'
  type: string
  default: " "
- name: runType
  displayName: 'Run Type'
  type: string
  default: "Dryrun"
  values:
  - "Dryrun"
  - "Production"
  - " "
- name: manualVerificationEmail
  displayName: 'Send Manual Verification Email'
  type: string
  default: "false"
  values:
  - "true"
  - "false"
- name: tvtresult
  displayName: 'TVT Result'
  type: string
  default: " "


variables:
 - group: lz-var-service-principle-secrets
 - group: var-password
 - group: var-azure-tenant-id
 - name: landingZoneServiceConnection
   ${{ if eq(parameters.environment, 'Production') }}:
      value: "sc-subsc-prd-bkof-001"
   ${{ if eq(parameters.environment, 'Non-Production') }}:
      value: "sc-subsc-np-bkof-001"
 - name: prvtEndpointName
   value: 'pve-${{ parameters.resourceLocation}}-${{ parameters.diagStorageAccount}}'
 - name: agentPool
   ${{ if eq(parameters.environment, 'Non-Production') }}:
    value: 'Windows-NP'
   ${{ else }}:
    value: 'Windows-PRD'
 - name: subId
   ${{ if eq(parameters.environment, 'Non-Production') }}:
    value: $(subsc-np-backoffice-sid)
   ${{ if eq(parameters.environment, 'Production') }}:
    value: $(subsc-prd-backoffice-sid)
 - name: serviceAccountP
   ${{ if eq(parameters.environment, 'Non-Production') }}:
    value: '$(serviceAccountNPPassword)'
   ${{ if eq(parameters.environment, 'Production') }}:
    value: '$(serviceAccountPRDPassword)'
 - name: serviceAccountU
   ${{ if eq(parameters.environment, 'Non-Production') }}:
    value: '$(serviceAccountNPUser)'
   ${{ if eq(parameters.environment, 'Production') }}:
    value: '$(serviceAccountPRDUser)'
 - name: serviceAccountUE
   ${{ if eq(parameters.environment, 'Non-Production') }}:
    value: '$(serviceAccountNPUserEmail)'
   ${{ if eq(parameters.environment, 'Production') }}:
    value: '$(serviceAccountPRDUserEmail)'
 - name: OUPath
   ${{ if eq(parameters.environment, 'Non-Production') }}:
    value: $(npOUPath)
   ${{ if eq(parameters.environment, 'Production') }}:
    value: $(prdOUPath)
 - name: adEmailAddress
   ${{ if eq(parameters.environment, 'Non-Production') }}:
    value: $(npAdReceiverEmail)
   ${{ if eq(parameters.environment, 'Production') }}:
    value: $(prdAdReceiverEmail)
 - name: tenantId
   ${{ if eq(parameters.environment, 'Non-Production') }}:
    value: $(np-azure-tenant-id)
   ${{ if eq(parameters.environment, 'Production') }}:
    value: $(prd-azure-tenant-id)

stages:
#Download Key Vault Secret
- template: templates/download-key-vault-secret-stage.yml
  parameters:
    stage: 'download_key_vault_secret'
    displayName: Download Key Vault
    dependsOn: ''
    agentPool: $(agentPool)
    condition: and(succeeded(), eq('${{parameters.targetDataType }}', 'external'), eq(variables['Build.Reason'], 'Manual'), eq('${{ parameters.manualVerificationEmail}}', 'false'))
    keyVaultNameforSecret: ${{ parameters.keyVaultNameforSecret}}
    zipFileSecretName: ${{ parameters.zipFileSecretName}}
    landingZoneServiceConnection: $(landingZoneServiceConnection)
    serviceAccountUE: $(serviceAccountUE)
    serviceAccountP: $(serviceAccountP)
    serviceAccountU: $(serviceAccountU)
    vmName: ${{ parameters.vmName}}
    tenantId: $(tenantId)
    subId: $(subId)

#Delete Azure resources Stage
- template: templates/deleteazureresources-stage.yml
  parameters:
    stage: 'delete_azureresources'
    displayName: 'Delete Azure Resources Stage'
    dependsOn: 'download_key_vault_secret'
    condition: |
      and
      (
        eq(variables['Build.Reason'], 'Manual'),
        or
          (
            eq(dependencies.download_key_vault_secret.result, 'Skipped'),
            eq(dependencies.download_key_vault_secret.result, 'Succeeded')
          ),
        eq('${{ parameters.manualVerificationEmail}}', 'false')
      )
    pool:
      vmImage: 'windows-latest'
    landingZoneServiceConnection: $(landingZoneServiceConnection)
    vmName: ${{ parameters.vmName}}
    vmRgName: ${{ parameters.vmRgName}}
    strAccName: ${{ parameters.diagStorageAccount}}
    prvtEndpointName: $(prvtEndpointName)
    commRGName: ${{ parameters.commRGName}}
    subId: $(subId)

#Notification Stage - Internal - Successful
- template: templates/notification-stage-internal.yml
  parameters:
    stage: 'notification_on_success_internal'
    displayName: Notification Stage on Success - Internal
    dependsOn: 'delete_azureresources'
    condition: |
      and
        (
          eq('${{ parameters.targetDataType }}', 'internal'),
          eq(dependencies.delete_azureresources.result, 'Succeeded')
        )
    pool:
      vmImage: 'windows-latest'
    variableGroup: var-parameter-dm-grp
    taskNumber: ${{ parameters.taskNumber}}
    workItemState: 'Done'
    workItemComment: "DMT Extraction Process for Task for Internal Use Completed."
    updateWorkItemDescription: 'Update Work Item on successful deletion of Azure Resources'
    sendEmailDescription: 'Send Email on successful deletion of Azure Resources'
    emailSubject: 'DMT Extraction Process for Task ${{ parameters.taskNumber}} for Internal Use Completed'
    emailBody: '<p>Hi,</p><p>DMT Extraction process for Task ${{ parameters.taskNumber}} for internal use completed. </p> <p> Extracted file(s) for internal use is present in <p> <b>Storage Account:</b> ${{ parameters.destStorageAccount}} </p> <p> <b> Container: </b> ${{ parameters.destContainerName}} </p> <p> <b>Folder(s):</b> </p> <p> ${{ parameters.destFileName}} </p> <p> Please validate. </p>'
    environment: ${{ parameters.environment}}
    receiverEmailAddress: ${{ parameters.receiverEmailAddress}}
    adReceiverEmailAddress: $(adEmailAddress)
    adSendEmailDescription: 'Send Email for Computer Object deletion in AD Email'
    adEmailSubject: 'Computer Object deletion in AD'
    adEmailBody: '<p>Hi,</p><p> To support the execution of DMF MLZ, <b>VM:</b> ${{ parameters.vmName}} with <b>OU path:</b> $(OUPath) was created to perform the tasks and has now been deleted from Azure, to save Azure consumption costs. </p> <p>  A service request needs to be raised to remove the computer object within the CFS AD domain supporting IaaS VM. </p><p> Please log the appropriate request to remove this computer object. </p>'

#Notification Stage - External - Successful
- template: templates/notification-stage-external.yml
  parameters:
    stage: 'notification_on_success_external'
    displayName: Notification Stage on Success - External
    dependsOn:
      - download_key_vault_secret
      - delete_azureresources
    pool:
      vmImage: 'windows-latest'
    condition: and(succeeded(), eq('${{ parameters.targetDataType }}', 'external'))
    variableGroup: var-parameter-dm-grp
    taskNumber: ${{ parameters.taskNumber}}
    workItemState: 'Done'
    workItemComment: "DMT Extraction Process for Task ${{ parameters.taskNumber}} for External Use Completed."
    updateWorkItemDescription: 'Update Work Item on successful deletion of Azure Resources'
    emailSubjectForPass: 'Password for SFTP Zip File for Task ${{ parameters.taskNumber}}'
    emailSubjectForFile: 'DMT Extraction Process for Task ${{ parameters.taskNumber}} for External Use Completed'
    emailBodyForFile: '<p>Hi,</p> <p> DMT Extraction Process for Task ${{ parameters.taskNumber}} for external use completed. Extracted Zipped file is found in Folders: </p> <p> ${{ parameters.destFileName}}</p></p>Please Validate if you can access the file by using the password shared in a separate email.</p>'
    environment: ${{ parameters.environment}}
    receiverEmailAddress: ${{ parameters.receiverEmailAddress}}
    clientEmailAddress: ${{ parameters.clientEmailAddress}}
    runType: ${{ parameters.runType}}
    adReceiverEmailAddress: $(adEmailAddress)
    adSendEmailDescription: 'Send Email for Computer Object deletion in AD Email'
    adEmailSubject: 'Computer Object deletion in AD'
    adEmailBody: '<p>Hi,</p><p> To support the execution of DMF MLZ, <b>VM:</b> ${{ parameters.vmName}} with <b>OU path:</b> $(OUPath) was created to perform the tasks and has now been deleted from Azure, to save Azure consumption costs. </p> <p>  A service request needs to be raised to remove the computer object within the CFS AD domain supporting IaaS VM. </p><p> Please log the appropriate request to remove this computer object. </p>'

#Notification Stage - Failure - Get KV Secret
- template: templates/notification-stage.yml
  parameters:
    stage: 'notification_on_failure_get_kv'
    displayName: Notification Stage on Failure - Get KV Secret
    dependsOn: 'download_key_vault_secret'
    condition: failed()
    pool:
      vmImage: 'windows-latest'
    variableGroup: var-parameter-dm-grp
    taskNumber: ${{ parameters.taskNumber}}
    workItemState: 'In Progress'
    workItemComment: "DMT Extraction Process for Task ${{ parameters.taskNumber}} Failed. An issue ocurred in getting the key vault secret for file password. "
    updateWorkItemDescription: 'Update Work Item on Failure Getting of Key Vault Secret'
    sendEmailDescription: 'Email Notification for Failure Getting of Key Vault Secret'
    emailSubject: 'DMT Extraction Process for Task ${{ parameters.taskNumber}} Failed'
    emailBody: '<p> Hi, </p> <p> DMT Extraction Process for Task ${{ parameters.taskNumber}} Failed.</p><p>An issue ocurred in getting the key vault secret for file password. </p></p><p> Please Contact Tech Support to look at Housekeeping Pipeline Build: <a href="$(System.TeamFoundationCollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)">$(Build.BuildId)</a></p>'
    environment: ${{ parameters.environment}}
    receiverEmailAddress: ${{ parameters.receiverEmailAddress}}

#Notification Stage - Failure - Delete Azure Resources
- template: templates/notification-stage.yml
  parameters:
    stage: 'notification_on_failure_delete_azure_resources'
    displayName: Notification Stage on Failure - Delete Azure Resources
    dependsOn: 'delete_azureresources'
    condition: failed()
    pool:
      vmImage: 'windows-latest'
    variableGroup: var-parameter-dm-grp
    taskNumber: ${{ parameters.taskNumber}}
    workItemState: 'In Progress'
    workItemComment: "DMT Extraction Process for Task ${{ parameters.taskNumber}} Failed"
    updateWorkItemDescription: 'Update Work Item on Failure Deletion of Azure Resources'
    sendEmailDescription: 'Email Notification for Failure Deletion of Azure Resources'
    emailSubject: 'DMT Extraction Process for Task ${{ parameters.taskNumber}} Failed. An issue ocurred in Azure resources deletion.'
    emailBody: '<p> Hi, </p> <p> DMT Extraction Process for Task ${{ parameters.taskNumber}} Failed.</p><p>An issue ocurred in Azure resources deletion. </p></p><p> Please Contact Tech Support to look at Housekeeping Pipeline Build: <a href="$(System.TeamFoundationCollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)">$(Build.BuildId)</a></p>'
    environment: ${{ parameters.environment}}
    receiverEmailAddress: ${{ parameters.receiverEmailAddress}}

#Send Manual Verification Email Stage
- template: templates/manual-verification-stage.yml
  parameters:
    stage: 'manual_verification_emailnotif'
    displayName: Manual Verification Email Notification
    condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'), eq('${{ parameters.manualVerificationEmail}}', 'true'))
    pool:
      vmImage: 'windows-latest'
    variableGroup: var-parameter-dm-grp
    environment: ${{ parameters.environment}}
    receiverEmailAddress: ${{ parameters.receiverEmailAddress}}
    sendEmailDescription: 'Manual Verification Email Notification'
    emailSubject: 'Mismatch Found in TVT Report'
    emailBody: '<p> Hi, </p> <p>There are mismatches found on TVT process. Please investigate the TVT result on this Virtual Machine (${{ parameters.vmName}}). </p><p>${{ parameters.tvtresult}}</p><p> Once the issue is resolved, please get back to us. </p><p>Thank you!</p>'
