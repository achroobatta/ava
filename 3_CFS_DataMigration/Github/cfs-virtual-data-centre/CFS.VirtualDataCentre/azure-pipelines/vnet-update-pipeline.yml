trigger: none # will disable CI builds entirely

pr: none # will disable PR builds entirely; will not disable CI triggers


## If we want to read from trunk branch directly not using artifact version packages
#resources:
#  repositories:
#  - repository: cfsnp
#    type: github
#    name: cfsnp/cfs-virtual-data-centre
#    endpoint: cfsnp

parameters:
  - name: deployEnvironment
    displayName: Target Deployment Environment
    type: string
    default: "Non-Production"
    values:
     - "Non-Production"
     - "Production"

  - name: artifactVersion
    displayName: Artifact/Package Version (e.g. "latest" or "0.0.0.256" or "1.0.0.1")
    type: string
    default: "latest"

  - name: isDayLightSavings
    displayName: Enable DayLight Savings Time
    type: boolean
    default: false
    values:
     - false
     - true

  - name: useWhatIfDeploymentType
    displayName: What-If Deployment
    type: boolean
    default: true
    values:
     - false
     - true

variables:

 - group: var-service-principle-secrets
 - group: var-azure-tenant-id

 #workspaces are in edc only
 - name: workspaceLocationPrefix
   value: "edc"

 # Artifact Package Feed Value
 - name: artifactFeed
 
   # deployment to Production environment must use the main branch for the pipeline yaml
   ${{ if and( eq(parameters.deployEnvironment, 'Production'), eq(variables['Build.SourceBranch'], 'refs/heads/main') ) }}:
    value: "core-it/cfs-infra-release"
   # deployment to Non-Production environment can be from the develop or a feature branch for the pipeline yaml
   ${{ elseif and( eq(parameters.deployEnvironment, 'Non-Production'), eq(variables['Build.SourceBranch'], 'refs/heads/develop') ) }}:
    value: "core-it/cfs-infra-ci"
   # deployment to Non-Production environment can be from the develop or a feature branch for the pipeline yaml
   # allow deployment to non-production from a feature branch, using the PR build (a PR needs to be raised on the feature branch, and wait for it to finish building a deployment artifact).
   ${{ elseif and( eq(parameters.deployEnvironment, 'Non-Production'), startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/') ) }}:
    value: "core-it/cfs-infra-pr-develop"
   #branch and/or deployEnvironment are not valid -> do not pull any artifact, just let the pipeline error out
   ${{ else }}:
    value: ""

 # Artifact Package Definition Value
 - name: artifactDefinition
   value: "CFS.VirtualDataCentre"

 # Artifact Package Version Value
 - name: artifactVersion
   value: ${{ parameters.artifactVersion }}

 # Azure DevOps Environments
 - name: AzureDevOpsEnvironments
   value: ${{ parameters.deployEnvironment }}

 # Azure DevOps Service Connection Name
 - name: AzureEnvironmentPrefix
   ${{ if eq(parameters.deployEnvironment, 'Non-Production') }}:
     value: "np"
   ${{ if eq(parameters.deployEnvironment, 'Production') }}:
     value: "prd"

 # Azure DevOps Connectivity Service Connection Name
 - name: connectivitySubscServiceConnection
   ${{ if eq(parameters.deployEnvironment, 'Non-Production') }}:
     value: "sc-subsc-np-connectivity-001"
   ${{ if eq(parameters.deployEnvironment, 'Production') }}:
     value: "sc-subsc-prd-connectivity-001"
  

 # Azure DevOps Connectivity Service Connection Name
 - name: managementSubscServiceConnection
   ${{ if eq(parameters.deployEnvironment, 'Non-Production') }}:
     value: "sc-mg-cfsco-nprd"
   ${{ if eq(parameters.deployEnvironment, 'Production') }}:
     value: "sc-mg-cfsco-prd"

 # Azure DevOps Group Management Id
 - name: managementGroupId
   ${{ if eq(parameters.deployEnvironment, 'Non-Production') }}:
     value: "CFSCoNonProd"
   ${{ if eq(parameters.deployEnvironment, 'Production') }}:
     value: "CFSCoProd"

 # Azure DevOps Identity Service Connection Name
 - name: identitySubscServiceConnection
   ${{ if eq(parameters.deployEnvironment, 'Non-Production') }}:
     value: "sc-subsc-np-identity-001"
   ${{ if eq(parameters.deployEnvironment, 'Production') }}:
     value: "sc-subsc-prd-identity-001"

 # Azure DevOps Operations Service Connection Name
 - name: operationsSubscServiceConnection
   ${{ if eq(parameters.deployEnvironment, 'Non-Production') }}:
     value: "sc-subsc-np-operations-001"
   ${{ if eq(parameters.deployEnvironment, 'Production') }}:
     value: "sc-subsc-prd-operations-001"

 # Azure DevOps Security Service Connection Name
 - name: securitySubscServiceConnection
   ${{ if eq(parameters.deployEnvironment, 'Non-Production') }}:
     value: "sc-subsc-np-security-001"
   ${{ if eq(parameters.deployEnvironment, 'Production') }}:
     value: "sc-subsc-prd-security-001"

 # Security Subscription ID
 - name: securitySubscriptionId
   ${{ if eq(parameters.deployEnvironment, 'Non-Production') }}:
     value: $(sc-subsc-np-security-sid)
   ${{ if eq(parameters.deployEnvironment, 'Production') }}:
     value: $(sc-subsc-prd-security-sid)

 # Connectivity Subscription ID
 - name: connectivitySubscriptionId
   ${{ if eq(parameters.deployEnvironment, 'Non-Production') }}:
     value: $(sc-subsc-np-connectivity-sid)
   ${{ if eq(parameters.deployEnvironment, 'Production') }}:
     value: $(sc-subsc-prd-connectivity-sid)

 # Operations Subscription ID
 - name: operationsSubscriptionId
   ${{ if eq(parameters.deployEnvironment, 'Non-Production') }}:
     value: $(sc-subsc-np-operations-sid)
   ${{ if eq(parameters.deployEnvironment, 'Production') }}:
     value: $(sc-subsc-prd-operations-sid)

 # Identity Subscription ID
 - name: identitySubscriptionId
   ${{ if eq(parameters.deployEnvironment, 'Non-Production') }}:
     value: $(sc-subsc-np-identity-sid)
   ${{ if eq(parameters.deployEnvironment, 'Production') }}:
     value: $(sc-subsc-prd-identity-sid)

 # Azure Tenant ID
 - name: azureTenantIdvar
   ${{ if eq(parameters.deployEnvironment, 'Non-Production') }}:
     value: $(np-azure-tenant-id)
   ${{ if eq(parameters.deployEnvironment, 'Production') }}:
     value: $(prd-azure-tenant-id)

 # Azure DevOps AustraliaEastOffsetSymbol
 - name: AustraliaEastOffsetSymbol
   ${{ if eq(parameters.isDayLightSavings, true) }}:
     value: "PT11H"
   ${{ else }}:
     value: "PT10H"

 # Deployment Type
 - name: deploymentType
   ${{ if eq(parameters.useWhatIfDeploymentType, true) }}:
    value: "what-if"
   ${{ else }}:
    value: "create"     

 # Azure OwnerÂ 
 - name: Owner
   value: "Robert Reakes"

 # Azure Cost Center Code
 - name: costCenterCode
   value: "4010"

 # Azure CLI Deployment Names Dynamically Applied Per Stage
 - name: deploymentName
   value: '$(System.StageDisplayName)_$(Build.BuildNumber)'

 # Azure Resource Location
 - name: resourceLocation
   value: "australiaeast"

stages:

  # Deploy RT and NSG
  - stage: DeployRTandNSG
    displayName: DeployRTandNSG

    variables:
    - group: var-azure-platform
    - group: var-service-principle-secrets

    pool:
      vmImage: windows-latest

    jobs:
    - deployment: DeployRTandNSG
      workspace:
        clean: all

      environment: $(AzureDevOpsEnvironments)
      strategy:
        runOnce:
          deploy:
            steps:

            - task: DownloadPackage@1
              displayName: DownloadArtifacts
              inputs:
                packageType: 'nuget'
                feed: '$(artifactFeed)'
                definition: '$(artifactDefinition)'
                version: '$(artifactVersion)'
                extract: true
                downloadPath: '$(System.ArtifactsDirectory)'

            - task: AzureCLI@2
              displayName : Deploy RT and NSG in Connectivity Subscription
              inputs:
                azureSubscription: $(connectivitySubscServiceConnection)
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' ^
                              --name $(deploymentName) ^
                              --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-VDCVirtualNetwork\deployRTandNSG.bicep ^
                              --parameters storageAccountSubscriptionId='$(securitySubscriptionId)' `
                              --parameters workspaceSubscriptionId='$(securitySubscriptionId)' `
                              --parameters environmentPrefix='$(AzureEnvironmentPrefix)' ^
                              --parameters owner='$(Owner)' ^
                              --parameters costCenter='$(costCenterCode)' ^
                              --parameters australiaEastOffsetSymbol='$(AustraliaEastOffsetSymbol)' ^
                              --parameters $(System.ArtifactsDirectory)\$(deployments)\connectivity.param.$(AzureEnvironmentPrefix).json

            # - task: AzureCLI@2
            #   displayName : Deploy RT and NSG in Identity Subscription
            #   inputs:
            #     azureSubscription: $(identitySubscServiceConnection)
            #     scriptType: 'pscore'
            #     scriptLocation: 'inlineScript'
            #     inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' ^
            #                   --name $(deploymentName) ^
            #                   --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-VDCVirtualNetwork\deployRTandNSG.bicep ^
            #                   --parameters storageAccountSubscriptionId='$(securitySubscriptionId)' `
            #                   --parameters workspaceSubscriptionId='$(securitySubscriptionId)' `
            #                   --parameters environmentPrefix='$(AzureEnvironmentPrefix)' ^
            #                   --parameters owner='$(Owner)' ^
            #                   --parameters costCenter='$(costCenterCode)' ^
            #                   --parameters australiaEastOffsetSymbol='$(AustraliaEastOffsetSymbol)' ^
            #                   --parameters $(System.ArtifactsDirectory)\$(deployments)\identity.param.$(AzureEnvironmentPrefix).json

            # - task: AzureCLI@2
            #   displayName : Deploy RT and NSG in Security Subscription
            #   inputs:
            #     azureSubscription: $(securitySubscServiceConnection)
            #     scriptType: 'pscore'
            #     scriptLocation: 'inlineScript'
            #     inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' ^
            #                   --name $(deploymentName) ^
            #                   --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-VDCVirtualNetwork\deployRTandNSG.bicep ^
            #                   --parameters storageAccountSubscriptionId='$(securitySubscriptionId)' `
            #                   --parameters workspaceSubscriptionId='$(securitySubscriptionId)' `
            #                   --parameters environmentPrefix='$(AzureEnvironmentPrefix)' ^
            #                   --parameters owner='$(Owner)' ^
            #                   --parameters costCenter='$(costCenterCode)' ^
            #                   --parameters australiaEastOffsetSymbol='$(AustraliaEastOffsetSymbol)' ^
            #                   --parameters $(System.ArtifactsDirectory)\$(deployments)\security.param.$(AzureEnvironmentPrefix).json

            # - task: AzureCLI@2
            #   displayName : Deploy RT and NSG in Operations Subscription
            #   inputs:
            #     azureSubscription: $(operationsSubscServiceConnection)
            #     scriptType: 'pscore'
            #     scriptLocation: 'inlineScript'
            #     inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' ^
            #                   --name $(deploymentName) ^
            #                   --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-VDCVirtualNetwork\deployRTandNSG.bicep ^
            #                   --parameters storageAccountSubscriptionId='$(securitySubscriptionId)' `
            #                   --parameters workspaceSubscriptionId='$(securitySubscriptionId)' `
            #                   --parameters environmentPrefix='$(AzureEnvironmentPrefix)' ^
            #                   --parameters owner='$(Owner)' ^
            #                   --parameters costCenter='$(costCenterCode)' ^
            #                   --parameters australiaEastOffsetSymbol='$(AustraliaEastOffsetSymbol)' ^
            #                   --parameters $(System.ArtifactsDirectory)\$(deployments)\operations.param.$(AzureEnvironmentPrefix).json


  # Update VDC Virtual Network Bundle
  - stage: DeployVDCVirtualNetwork
    displayName: DeployVDCVirtualNetwork

    variables:
    - group: var-azure-platform
    - group: var-service-principle-secrets

    pool:
      vmImage: windows-latest

    dependsOn: [DeployRTandNSG]
    jobs:
    - deployment: DeployVDCVirtualNetwork
      workspace:
        clean: all

      environment: $(AzureDevOpsEnvironments)
      strategy:
        runOnce:
          deploy:
            steps:

            - task: DownloadPackage@1
              displayName: DownloadArtifacts
              inputs:
                packageType: 'nuget'
                feed: '$(artifactFeed)'
                definition: '$(artifactDefinition)'
                version: '$(artifactVersion)'
                extract: true
                downloadPath: '$(System.ArtifactsDirectory)'

            - task: AzureCLI@2
              displayName : Deploy VDC Connectivity Network
              inputs:
                azureSubscription: $(connectivitySubscServiceConnection)
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' `
                              --name $(deploymentName) `
                              --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-VDCVirtualNetwork\deploy-VDCVirtualNetwork.bicep `
                              --parameters storageAccountSubscriptionId='$(securitySubscriptionId)' `
                              --parameters workspaceSubscriptionId='$(securitySubscriptionId)' `
                              --parameters environmentPrefix='$(AzureEnvironmentPrefix)' `
                              --parameters owner='$(Owner)' `
                              --parameters costCenter='$(costCenterCode)' `
                              --parameters australiaEastOffsetSymbol='$(AustraliaEastOffsetSymbol)' `
                              --parameters $(System.ArtifactsDirectory)\$(deployments)\connectivity.param.$(AzureEnvironmentPrefix).json

            # - task: AzureCLI@2
            #   displayName : Deploy VDC Identity Network
            #   inputs:
            #     azureSubscription: $(identitySubscServiceConnection)
            #     scriptType: 'pscore'
            #     scriptLocation: 'inlineScript'
            #     inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' `
            #                   --name $(deploymentName) `
            #                   --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-VDCVirtualNetwork\update-VDCVirtualNetwork.bicep `
            #                   --parameters storageAccountSubscriptionId='$(securitySubscriptionId)' `
            #                   --parameters workspaceSubscriptionId='$(securitySubscriptionId)' `
            #                   --parameters environmentPrefix='$(AzureEnvironmentPrefix)' `
            #                   --parameters owner='$(Owner)' `
            #                   --parameters costCenter='$(costCenterCode)' `
            #                   --parameters australiaEastOffsetSymbol='$(AustraliaEastOffsetSymbol)' `
            #                   --parameters $(System.ArtifactsDirectory)\$(deployments)\identity.param.$(AzureEnvironmentPrefix).json

            # - task: AzureCLI@2
            #   displayName : Deploy VDC Security Network
            #   inputs:
            #     azureSubscription: $(securitySubscServiceConnection)
            #     scriptType: 'pscore'
            #     scriptLocation: 'inlineScript'
            #     inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' ^
            #                   --name $(deploymentName) ^
            #                   --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-VDCVirtualNetwork\update-VDCVirtualNetwork.bicep ^
            #                   --parameters storageAccountSubscriptionId='$(securitySubscriptionId)' `
            #                   --parameters workspaceSubscriptionId='$(securitySubscriptionId)' `
            #                   --parameters environmentPrefix='$(AzureEnvironmentPrefix)' ^
            #                   --parameters owner='$(Owner)' ^
            #                   --parameters costCenter='$(costCenterCode)' ^
            #                   --parameters australiaEastOffsetSymbol='$(AustraliaEastOffsetSymbol)' ^
            #                   --parameters $(System.ArtifactsDirectory)\$(deployments)\security.param.$(AzureEnvironmentPrefix).json

            # - task: AzureCLI@2
            #   displayName : Deploy VDC Operations Network
            #   inputs:
            #     azureSubscription: $(operationsSubscServiceConnection)
            #     scriptType: 'pscore'
            #     scriptLocation: 'inlineScript'
            #     inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' ^
            #                   --name $(deploymentName) ^
            #                   --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-VDCVirtualNetwork\update-VDCVirtualNetwork.bicep ^
            #                   --parameters storageAccountSubscriptionId='$(securitySubscriptionId)' `
            #                   --parameters workspaceSubscriptionId='$(securitySubscriptionId)' `
            #                   --parameters environmentPrefix='$(AzureEnvironmentPrefix)' ^
            #                   --parameters owner='$(Owner)' ^
            #                   --parameters costCenter='$(costCenterCode)' ^
            #                   --parameters australiaEastOffsetSymbol='$(AustraliaEastOffsetSymbol)' ^
            #                   --parameters $(System.ArtifactsDirectory)\$(deployments)\operations.param.$(AzureEnvironmentPrefix).json



  # Deploy VDC Virtual Network Peerings
  - stage: DeployVirtualNetworkPeerings
    displayName: DeployVirtualNetworkPeerings

    variables:
    - group: var-azure-platform
    - group: var-service-principle-secrets

    pool:
      vmImage: windows-latest

    dependsOn: [DeployVDCVirtualNetwork]
    jobs:
    - deployment: DeployVirtualNetworkPeerings
      workspace:
        clean: all

      environment: $(AzureDevOpsEnvironments)
      strategy:
        runOnce:
          deploy:
            steps:

            - task: DownloadPackage@1
              displayName: DownloadArtifacts
              inputs:
                packageType: 'nuget'
                feed: '$(artifactFeed)'
                definition: '$(artifactDefinition)'
                version: '$(artifactVersion)'
                extract: true
                downloadPath: '$(System.ArtifactsDirectory)'

            - task: AzureCLI@2
              displayName : HubToHubVirtualNetworkPeering
              inputs:
                azureSubscription: $(connectivitySubscServiceConnection)
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' ^
                              --name $(deploymentName) ^
                              --parameters localVirtualNetworkSubscriptionId='$(connectivitySubscriptionId)' ^
                              --parameters remoteVirtualNetworkSubscriptionId='$(connectivitySubscriptionId)' ^
                              --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-HubToHubVnetPeering\deploy-HubToHubVnetPeering.bicep ^
                              --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-HubToHubVnetPeering\deploy-HubToHubVnetPeering.param.$(AzureEnvironmentPrefix).json

            - task: AzureCLI@2
              displayName : HubToIdentiySpokeVirtualNetworkPeering
              inputs:
                azureSubscription: $(connectivitySubscServiceConnection)
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' ^
                              --name $(deploymentName) ^
                              --parameters remoteVirtualNetworkSubscriptionId='$(identitySubscriptionId)' ^
                              --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-HubToSpokeVnetPeering\deploy-HubToSpokeVnetPeering.bicep ^
                              --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-HubToSpokeVnetPeering\deploy-HubToIdentitySpoke.param.$(AzureEnvironmentPrefix).json

            - task: AzureCLI@2
              displayName : HubToOperationsSpokeVirtualNetworkPeering
              inputs:
                azureSubscription: $(connectivitySubscServiceConnection)
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' ^
                              --name $(deploymentName) ^
                              --parameters remoteVirtualNetworkSubscriptionId='$(operationsSubscriptionId)' ^
                              --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-HubToSpokeVnetPeering\deploy-HubToSpokeVnetPeering.bicep ^
                              --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-HubToSpokeVnetPeering\deploy-HubToOperationsSpoke.param.$(AzureEnvironmentPrefix).json

            - task: AzureCLI@2
              displayName : HubToSecuritySpokeVirtualNetworkPeering
              inputs:
                azureSubscription: $(connectivitySubscServiceConnection)
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' ^
                              --name $(deploymentName) ^
                              --parameters remoteVirtualNetworkSubscriptionId='$(securitySubscriptionId)' ^
                              --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-HubToSpokeVnetPeering\deploy-HubToSpokeVnetPeering.bicep ^
                              --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-HubToSpokeVnetPeering\deploy-HubToSecuritySpoke.param.$(AzureEnvironmentPrefix).json

            - task: AzureCLI@2
              displayName : IdentitySpokeToHubVnetPeering
              inputs:
                azureSubscription: $(identitySubscServiceConnection)
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' ^
                              --name $(deploymentName) ^
                              --parameters remoteVirtualNetworkSubscriptionId='$(connectivitySubscriptionId)' ^
                              --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-HubToSpokeVnetPeering\deploy-SpokeToHubVnetPeering.bicep ^
                              --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-HubToSpokeVnetPeering\deploy-IdentitySpokeToHub.param.$(AzureEnvironmentPrefix).json

            - task: AzureCLI@2
              displayName : OperationsSpokeToHubVnetPeering
              inputs:
                azureSubscription: $(operationsSubscServiceConnection)
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' ^
                              --name $(deploymentName) ^
                              --parameters remoteVirtualNetworkSubscriptionId='$(connectivitySubscriptionId)' ^
                              --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-HubToSpokeVnetPeering\deploy-SpokeToHubVnetPeering.bicep ^
                              --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-HubToSpokeVnetPeering\deploy-OperationsSpokeToHub.param.$(AzureEnvironmentPrefix).json

            - task: AzureCLI@2
              displayName : SecuritySpokeToHubVnetPeering
              inputs:
                azureSubscription: $(securitySubscServiceConnection)
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' ^
                              --name $(deploymentName) ^
                              --parameters remoteVirtualNetworkSubscriptionId='$(connectivitySubscriptionId)' ^
                              --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-HubToSpokeVnetPeering\deploy-SpokeToHubVnetPeering.bicep ^
                              --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-HubToSpokeVnetPeering\deploy-SecuritySpokeToHub.param.$(AzureEnvironmentPrefix).json

  # Deploy Network UDR Rules
  - stage: DeployNetworkUDRRules
    displayName: DeployVDCUDRRules

    variables:
    - group: var-azure-platform
    - group: var-service-principle-secrets

    pool:
      vmImage: windows-latest

    dependsOn: [DeployVDCVirtualNetwork]
    jobs:
    - deployment: DeployVDCNetworkUDR
      workspace:
        clean: all

      environment: $(AzureDevOpsEnvironments)
      strategy:
        runOnce:
          deploy:
            steps:

            - task: DownloadPackage@1
              displayName: DownloadArtifacts
              inputs:
                packageType: 'nuget'
                feed: '$(artifactFeed)'
                definition: '$(artifactDefinition)'
                version: '$(artifactVersion)'
                extract: true
                downloadPath: '$(System.ArtifactsDirectory)'

            - task: AzureCLI@2
              displayName : ConnectivityNetworkUDR
              inputs:
                azureSubscription: $(connectivitySubscServiceConnection)
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' `
                              --name $(deploymentName) `
                              --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-UDR\deployUDR.bicep `
                              --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-UDR\connectivityRules.param.$(AzureEnvironmentPrefix).json `
                              --parameters environmentPrefix='$(AzureEnvironmentPrefix)'

            # - task: AzureCLI@2
            #   displayName : IdentityNetworkUDR
            #   inputs:
            #     azureSubscription: $(identitySubscServiceConnection)
            #     scriptType: 'pscore'
            #     scriptLocation: 'inlineScript'
            #     inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' `
            #                   --name $(deploymentName) `
            #                   --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-UDR\deployUDR.bicep `
            #                   --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-UDR\identityRules.param.$(AzureEnvironmentPrefix).json `
            #                   --parameters environmentPrefix='$(AzureEnvironmentPrefix)'

            # - task: AzureCLI@2
            #   displayName : SecurityNetworkUDR
            #   inputs:
            #     azureSubscription: $(securitySubscServiceConnection)
            #     scriptType: 'pscore'
            #     scriptLocation: 'inlineScript'
            #     inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' `
            #                   --name $(deploymentName) `
            #                   --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-UDR\deployUDR.bicep `
            #                   --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-UDR\securityRules.param.$(AzureEnvironmentPrefix).json `
            #                   --parameters environmentPrefix='$(AzureEnvironmentPrefix)'

            # - task: AzureCLI@2
            #   displayName : OperationsNetworkUDR
            #   inputs:
            #     azureSubscription: $(operationsSubscServiceConnection)
            #     scriptType: 'pscore'
            #     scriptLocation: 'inlineScript'
            #     inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' `
            #                   --name $(deploymentName) `
            #                   --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-UDR\deployUDR.bicep `
            #                   --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-UDR\operationsRules.param.$(AzureEnvironmentPrefix).json `
            #                   --parameters environmentPrefix='$(AzureEnvironmentPrefix)'

  # Deploy Virtual Network Security Groups Rules
  - stage: DeployNetworkNSGRules
    displayName: DeployVDCNSGRules

    variables:
    - group: var-azure-platform
    - group: var-service-principle-secrets

    pool:
      vmImage: windows-latest

    dependsOn: [DeployVDCVirtualNetwork]
    jobs:
    - deployment: DeployVDCNetworkSecurityGroups
      workspace:
        clean: all

      environment: $(AzureDevOpsEnvironments)
      strategy:
        runOnce:
          deploy:
            steps:

            - task: DownloadPackage@1
              displayName: DownloadArtifacts
              inputs:
                packageType: 'nuget'
                feed: '$(artifactFeed)'
                definition: '$(artifactDefinition)'
                version: '$(artifactVersion)'
                extract: true
                downloadPath: '$(System.ArtifactsDirectory)'

            - task: AzureCLI@2
              displayName : ConnectivityNetworkNSGRules
              inputs:
                azureSubscription: $(connectivitySubscServiceConnection)
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' `
                              --name $(deploymentName) `
                              --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-NSG\deployNSGRule.bicep `
                              --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-NSG\connectivityNSGRules.param.$(AzureEnvironmentPrefix).json `
                              --parameters environmentPrefix='$(AzureEnvironmentPrefix)'

            # - task: AzureCLI@2
            #   displayName : IdentityNetworkNSGRules
            #   inputs:
            #     azureSubscription: $(identitySubscServiceConnection)
            #     scriptType: 'pscore'
            #     scriptLocation: 'inlineScript'
            #     inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' `
            #                   --name $(deploymentName) `
            #                   --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-NSG\deployNSGRule.bicep `
            #                   --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-NSG\identityNSGRules.param.$(AzureEnvironmentPrefix).json `
            #                   --parameters environmentPrefix='$(AzureEnvironmentPrefix)'

            # - task: AzureCLI@2
            #   displayName : SecurityNetworkNSGRules
            #   inputs:
            #     azureSubscription: $(securitySubscServiceConnection)
            #     scriptType: 'pscore'
            #     scriptLocation: 'inlineScript'
            #     inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' `
            #                   --name $(deploymentName) `
            #                   --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-NSG\deployNSGRule.bicep `
            #                   --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-NSG\securityNSGRules.param.$(AzureEnvironmentPrefix).json `
            #                   --parameters environmentPrefix='$(AzureEnvironmentPrefix)'

            # - task: AzureCLI@2
            #   displayName : OperationsNetworkNSGRules
            #   inputs:
            #     azureSubscription: $(operationsSubscServiceConnection)
            #     scriptType: 'pscore'
            #     scriptLocation: 'inlineScript'
            #     inlineScript: az deployment sub $(deploymentType) --location '$(resourceLocation)' `
            #                   --name $(deploymentName) `
            #                   --template-file $(System.ArtifactsDirectory)\$(deployments)\deploy-NSG\deployNSGRule.bicep `
            #                   --parameters $(System.ArtifactsDirectory)\$(deployments)\deploy-NSG\operationsNSGRules.param.$(AzureEnvironmentPrefix).json `
            #                   --parameters environmentPrefix='$(AzureEnvironmentPrefix)'

